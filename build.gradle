group = "com.trenako"
description = "A social network for model railways."

def springVersion = "3.1.1.RELEASE"
def slf4jVersion = "1.6.1"
def spockVersion = "0.6-groovy-1.8"

allprojects {
	apply plugin: 'java'
	apply plugin: 'groovy'
	apply plugin: 'eclipse'

	sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6

	repositories {
		mavenCentral()
		maven {url "http://maven.springframework.org/release"}
		maven {url "http://repository.jboss.org/nexus/content/repositories/releases/"}
	}

	configurations {
		integrationTestCompile {
			extendsFrom testCompile
		}
		integrationTestRuntime {
			extendsFrom integrationTestCompile, testRuntime
		}
	}

	sourceSets {
		integrationTest {
			groovy.srcDir file('src/integrationTest/groovy')
		    resources.srcDir file('src/integrationTest/resources')
			compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.integrationTestCompile
			runtimeClasspath = output + compileClasspath + configurations.integrationTestRuntime
		}
	}

	eclipse {
		// add the integration classpath
		classpath {
			plusConfigurations += configurations.integrationTestRuntime

			//default settings for dependencies sources/javadoc download:
			downloadSources = true
			downloadJavadoc = false
		}
	}

	dependencies {
		// logging
		compile "org.slf4j:slf4j-api:${slf4jVersion}"
		runtime "org.slf4j:jcl-over-slf4j:${slf4jVersion}",
			"org.slf4j:slf4j-log4j12:${slf4jVersion}",
			"log4j:log4j:1.2.16"

		// unit testing
		testCompile "junit:junit:4.10",
			"org.mockito:mockito-all:1.9.0",
			"org.springframework:spring-test:${springVersion}"

		// integration testing
		groovy "org.codehaus.groovy:groovy-all:1.8.6"
		integrationTestCompile "org.spockframework:spock-core:${spockVersion}",
			"org.spockframework:spock-spring:${spockVersion}"
	}

	// integration testing: the application is deployed to the web container
	task integrationTest(description: 'Runs the integration tests.', group: 'Verification', type: Test) {
		testClassesDir = sourceSets.integrationTest.output.classesDir
		classpath = sourceSets.integrationTest.runtimeClasspath
	}
	check.dependsOn integrationTest
}

subprojects { subproj ->
	jar {
		manifest.attributes['Implementation-Title'] = subproj.name
		manifest.attributes['Implementation-Version'] = subproj.version
	}
}

project("trenako-common") {
	description = 'The domain entity classes.'

	dependencies {
		// spring framework
		compile("org.springframework:spring-context:${springVersion}") {
			exclude group: "commons-logging", module: "commons-logging"
		}

		// GCLIB, required for @Configuration usage
		compile "cglib:cglib-nodep:2.2.2"

		// apache commons
		compile "org.apache.commons:commons-lang3:3.1"

		// JSR 303 with Hibernate Validator
		compile "javax.validation:validation-api:1.0.0.GA"
		compile "org.hibernate:hibernate-validator:4.2.0.Final"	

		// mongodb
		compile "org.springframework.data:spring-data-mongodb:1.0.1.RELEASE"
		compile "org.mongodb:mongo-java-driver:2.7.3"
	}
} 

project("trenako-services") {
	description = 'The domain entity classes.'

	dependencies {
		compile project(":trenako-common")
	}
}



// wrapper task to create the download script
task wrapper(type: Wrapper, group: 'Gradle wrapper', description: 'Gradle will be automatically downloaded and used to run the build.') {
	gradleVersion = '1.0-rc-3'
}
