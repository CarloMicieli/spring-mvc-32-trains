<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<authentication-manager>
		<authentication-provider user-service-ref="accountDetailsService">
			<password-encoder hash="sha"/>
		</authentication-provider>
	</authentication-manager>

	<!-- remember me tokens repository -->
	<beans:bean name="persistentTokenRepository"
		class="com.trenako.web.security.PersistentTokenRepositoryImpl" />

	<!-- password encoders -->
	<beans:bean name="passwordEncoder" 
		class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" />

	<!-- enables the Pre/Post annotations management -->
	<global-method-security pre-post-annotations="enabled"/>
	
	<!-- no security checks for static content -->
	<http pattern="/resources/**" security="none" />
	
	<http auto-config="true" access-decision-manager-ref="accessDecisionManager" 
			use-expressions="true" 
			access-denied-page="/error/denied">

		<intercept-url pattern="/auth/logout*" access="isAuthenticated()" />
		<intercept-url pattern="/auth/**" access="permitAll" />
		<intercept-url pattern="/images/**" access="permitAll" />
		<intercept-url pattern="/rs/**" access="permitAll" />
		<intercept-url pattern="/browse/**" access="permitAll" />
		<intercept-url pattern="/default" access="isAuthenticated()" />
		<intercept-url pattern="/you/**" access="isAuthenticated()" />
		<intercept-url pattern="/wishlists/**" access="isAuthenticated()" />
		<intercept-url pattern="/collections/**" access="isAuthenticated()" />
		<intercept-url pattern="/rollingstocks/new*" access="isAuthenticated()" />
		<intercept-url pattern="/rollingstocks/{slug}/edit*" access="isAuthenticated()" />
		<intercept-url pattern="/rollingstocks/{slug}/reviews/new*" access="isAuthenticated()" />
		<intercept-url pattern="/rollingstocks/**" method="GET" access="permitAll" />
		<intercept-url pattern="/rollingstocks/**" access="isAuthenticated()" />
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_STAFF')" />
		<intercept-url pattern="/home/**" access="permitAll" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/**" access="denyAll" />
		<form-login login-page="/auth/login"
			authentication-failure-url="/auth/login?login_error"
			default-target-url="/default" />
		<logout logout-url="/auth/logout" />
		<remember-me token-repository-ref="persistentTokenRepository" />
	</http>
	
	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter">
					<beans:property name="expressionHandler" ref="expressionHandler"/>
				</beans:bean>			
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean id="expressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="roleHierarchy" ref="roleHierarchy" />
	</beans:bean>
	
	<beans:bean id="roleHierarchy"
			class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
	    <beans:property name="hierarchy">
	        <beans:value>
	            ROLE_ADMIN > ROLE_STAFF
	            ROLE_STAFF > ROLE_USER
	        </beans:value>
	    </beans:property>
	</beans:bean>
</beans:beans>